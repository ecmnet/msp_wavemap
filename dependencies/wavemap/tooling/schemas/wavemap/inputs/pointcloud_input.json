{
  "$schema": "https://json-schema.org/draft-07/schema",
  "description": "Properties of a single pointcloud input.",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "topic_name",
    "topic_type",
    "measurement_integrator_names"
  ],
  "properties": {
    "type": {
      "const": "pointcloud_topic"
    },
    "topic_name": {
      "description": "Name of the ROS topic to subscribe to.",
      "type": "string"
    },
    "topic_type": {
      "description": "Message type of the ROS topic to subscribe to.",
      "type": "string",
      "enum": [
        "PointCloud2",
        "ouster",
        "livox"
      ]
    },
    "measurement_integrator_names": {
      "description": "Name(s) of the measurement integrator(s) used to integrate the measurements into the map.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "topic_queue_length": {
      "description": "Queue length to use when subscribing to the ROS topic.",
      "type": "integer",
      "exclusiveMinimum": 0
    },
    "processing_retry_period": {
      "description": "Time period used to control the rate at which to retry getting the sensor pose when ROS TF lookups fail.",
      "$ref": "../value_with_unit/convertible_to_seconds.json",
      "exclusiveMinimum": 0
    },
    "max_wait_for_pose": {
      "description": "Maximum amount of time to wait for the sensor pose to become available when ROS TF lookups fail.",
      "$ref": "../value_with_unit/convertible_to_seconds.json",
      "minimum": 0
    },
    "sensor_frame_id": {
      "description": "The frame_id to use to look up the sensor pose using ROS TFs. Note that setting this is optional, by default the header.frame_id of the measurement's msg is used.",
      "type": "string"
    },
    "time_offset": {
      "description": "Time offset to apply to the header.stamp of the measurement's msg when looking up its pose using ROS TFs. Can be used when the time offset is known (e.g. through calibration) but not corrected by the sensor's driver.",
      "$ref": "../value_with_unit/convertible_to_seconds.json"
    },
    "undistort_motion": {
      "description": "Whether to undistort each pointcloud based on the sensor's motion while it was captured. We strongly recommend turning this on, unless the robot's odometry is very jerky or the sensor's driver already performs motion undistortion.",
      "type": "boolean"
    },
    "num_undistortion_interpolation_intervals_per_cloud": {
      "description": "Number of intermediate poses to sample from ROS TFs when performing motion undistortion.",
      "type": "integer"
    },
    "reprojected_pointcloud_topic_name": {
      "description": "Name of the topic on which to republish the motion-undistorted pointclouds. Useful to share the undistorted pointclouds with other ROS nodes and for debugging.",
      "type": "string"
    },
    "projected_range_image_topic_name": {
      "description": "Name of the topic on which to republish the range image computed from the pointclouds. Useful for debugging, to see how well the projection model matches the LiDAR.",
      "type": "string"
    }
  }
}
